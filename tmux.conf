bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on
set -g status-keys vi
set -g @shell_mode 'vi'
# Hierarchy:
#  Server
#  ?Session
#    ?Window
#      ?Pane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# Change bind key to ctrl-a
unbind-key c-b
set-option -g prefix c-a

# Index starts from 1
set-option -g base-index 1
set-option -g pane-base-index 1

# Renumber windows when a window is closed
# Automatically set window title
set -g renumber-windows on # re-number windows when one is closed
set -g set-titles on                        # set terminal title
set -g set-titles-string '#h ❐ #S ● #I #W'
set -g display-time 1500 # tmux messages are displayed for 1.5 seconds
set -g display-panes-time 800 # slightly longer pane indicators display time
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g allow-rename off
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g allow-rename off
set-option -g status-position bottom
set-option -g status-position bottom

# History
set-option -g history-limit 102400

# Repeat time limit (ms)
set-option -g repeat-time 500

# 256-color terminal
set-option -g default-terminal "screen-256color"

# Sierra
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l $SHELL"

# Add truecolor support (tmux info | grep Tc)
# set -ga terminal-overrides ",*256col*:Tc"
set-option -ga terminal-overrides ",xterm-256color:Tc"


# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys vi
setw -g other-pane-height 25
setw -g other-pane-width 80

# focus events enabled for terminals that support them
set -g focus-events on
setw -g monitor-activity off


# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
# Copy-mode
set-window-option -g mode-keys vi

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# prefix c
bind-key c new-window -c "#{pane_current_path}"

# prefix ctrl-a
bind-key c-a last-window

# prefix a
bind-key a send-prefix

# prefix |
bind-key | split-window -h -c "#{pane_current_path}"

# prefix -
bind-key - split-window -c "#{pane_current_path}"

# Moving windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-

# Back and forth
bind-key bspace previous-window
bind-key space next-window
# Smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind-key o choose-tree

bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind - resize-pane -U 2
bind _ resize-pane -U 17
bind = resize-pane -D 2
bind + resize-pane -D 16
bind 9 resize-pane -L 6
bind ( resize-pane -L 24
bind 0 resize-pane -R 6
bind ) resize-pane -R 24

# Setup 'v' to begin selection as in Vim
# https://github.com/tmux/tmux/issues/754#issuecomment-297452143
# Set vim style copy paste
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'V' send-keys -X select-line
bind-key -T copy-mode-vi 'r' send-keys -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'

# -d for detached, meaning keep focus on current window rather than switching to the new one
bind b break-pane -d

# Synchronize panes
bind-key * set-window-option synchronize-pane

# Reload ~/.tmux.conf
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded!"

# copy-mode
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# Capture pane and open in Vim
bind-key C-c run 'FILE=/tmp/tmux-capture-$(date +%Y%m%d%H%M%S).txt; tmux capture-pane -J -S -102400 -p > $FILE; tmux new-window "reattach-to-user-namespace vim $FILE"'
bind-key M-c run "screencapture -l$(osascript -e 'tell app \"iTerm\" to id of window 1') -x -o -P /tmp/$(date +%Y%m%d-%H%M%S).png"

# Clear scrollback buffer
bind-key C-l send-keys C-l \; clear-history

# Notes
bind-key C-n if-shell "tmux select-window -t NOTES" "" \
"new-window -n NOTES 'reattach-to-user-namespace bash -i ~/gdrive/sync/notes/list'; move-window -t 0" \

# Goyo
bind-key G set status

# -------------------------------------------------------------------
# Decoration (256-color)
# -------------------------------------------------------------------

# ----------------------
# set some pretty colors
# ----------------------
# colorize messages in the command line
set -g message-style bg=default,fg=brightred #base02
set -g message-command-style bg=black,fg=blue

# ----------------------
# Panes
# -----------------------

set -g pane-border-style bg=default,fg=colour235
set -g pane-active-border-style bg=default,fg=colour235
setw -g pane-border-status top
setw -g pane-border-format '─'

# ----------------------
# Status Bar
# -----------------------
set -g status on

set -g status-interval 1
set -g status-justify left

# set color for status bar
set -g status-style bg=default,fg=default

# active window title colors
set-window-option -g window-status-current-style fg=brightred,bg=default,bright
set -g status-style bg=default

set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_bg 'colour5'
set -g @prefix_highlight_fg 'black'

status_date_time="#[fg=colour237]#[fg=colour243]%A, %d %b %Y %H:%M#[fg=colour237] "
# status_github="#(~/.tmux.d/scripts/tmux-github-status)"
status_prayer_times="#[fg=colour243]#(~/.tmux.d/scripts/tmux-next-prayer) #[fg=colour237]⦁ "

set -g status-right-length 300
set -g status-right "${status_prefix}${status_github}${status_date_time}"

# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------
# Tmux completion
bind-key -n 'M-t' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(tmuxwords.rb --all --scroll 1000 --min 5 | fzf --multi | paste -sd\\  -)\"'"

# fzf-locate (all)
bind-key -n 'M-`' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

# kill the current session and switch us to another session, keeping us connected to tmux throughout
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Remove annoying delay when escaping from vim insert mode
# Caveat: Will break any tmux bindings that start with Esc
# http://superuser.com/a/252717/65504
set -sg escape-time 0
setw -g mode-keys vi

## Join windows: <prefix> s, <prefix> j
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"


# Synchronize panes
bind-key * set-window-option synchronize-pane

# Theme
source ~/.tmuxline_snapshot

set -g @tpm_plugins " \
tmux-plugins/tpm \
"
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
#set -g @plugin 'tmux-plugins/tmux-pain-control'
# Keep this line at the very bottom of tmux.conf.
run -b '~/.tmux/plugins/tpm/tpm'
