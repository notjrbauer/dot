bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

if-shell "test -f ~/.tmux-status.conf" "source ~/.tmux-status.conf"

set -g status-keys vi
set -g @shell_mode 'vi'

# utf8 is always on

 # increase scrollback buffer size
 set -g history-limit 50000

 # tmux messages are displayed for 4 seconds
 set -g display-time 4000

 # refresh 'status-left' and 'status-right' more often
 set -g status-interval 5

 # set only on OS X where it's required
 set -g default-command "reattach-to-user-namespace -l $SHELL"

 # upgrade $TERM
 set -g default-terminal "screen-256color"
 set-option -ga terminal-overrides ",screen-256color:Tc"

 # emacs key bindings in tmux command prompt (prefix + :) are better than
 # vi keys, even for vim users
 set -g status-keys vi

 # focus events enabled for terminals that support them
 set -g focus-events on

 # super useful when using "grouped sessions" and multi-monitor setup
 setw -g aggressive-resize on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind-key o choose-tree

bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind - resize-pane -U 2
bind _ resize-pane -U 17
bind = resize-pane -D 2
bind + resize-pane -D 16
bind 9 resize-pane -L 6
bind ( resize-pane -L 24
bind 0 resize-pane -R 6
bind ) resize-pane -R 24

set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"
#set -g default-terminal "screen-256color"
#set -ga terminal-overrides ",screen-256color:Tc"

# Setup 'v' to begin selection as in Vim
# https://github.com/tmux/tmux/issues/754#issuecomment-297452143
bind-key -T copy-mode-vi v send-keys -X begin-selection

# -d for detached, meaning keep focus on current window rather than switching to the new one
bind b break-pane -d

# switch to session using fuzzy match
#bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# kill the current session and switch us to another session, keeping us connected to tmux throughout
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Remove annoying delay when escaping from vim insert mode
# Caveat: Will break any tmux bindings that start with Esc
# http://superuser.com/a/252717/65504
set -sg escape-time 0

# Number from 1 for easier key bindings
set -g base-index 1
setw -g pane-base-index 1
setw -g mode-keys vi

## Join windows: <prefix> s, <prefix> j
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

#set -g default-terminal "screen-256color"
#set -ga terminal-overrides ",screen-256color:Tc"

#unbind C-b
set -g prefix C-a
set-option -g allow-rename off

#bind-key -T edit-mode-vi Down send-keys -X history-down
if-shell "test -f ~/.tmux-status.conf" "source ~/.tmux-status.conf"
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Synchronize panes
bind-key * set-window-option synchronize-pane

# Capture pane and open in Vim
bind-key C-c run 'FILE=/tmp/tmux-capture-$(date +%Y%m%d%H%M%S).txt; tmux capture-pane -J -S -102400 -p > $FILE; tmux new-window "reattach-to-user-namespace nvim $FILE"'

# Clear scrollback buffer
bind-key C-l send-keys C-l \; clear-history

# Notes
bind-key C-n if-shell "tmux select-window -t NOTES" "" \
  "new-window -n NOTES 'reattach-to-user-namespace bash -i ~/gdrive/sync/notes/list'; move-window -t 0" \

# Goyo
bind-key G set status

# -------------------------------------------------------------------
# Decoration (256-color)
# -------------------------------------------------------------------
set-option -g status-justify left
#set-option -g status-left '#[bg=colour72] #[bg=colour237] #[bg=colour236] #[bg=colour235]#[fg=colour185] #h #[bg=colour236] '
set-option -g status-left-length 16
#set-option -g status-bg colour237
#set-option -g status-right '#(date "+%a %b %d %H:%M") '
set-option -g status-interval 60

set-option -g pane-border-status bottom
set-option -g pane-border-format "#{pane_index} #{pane_current_command}"

set -g @tpm_plugins " \
  tmux-plugins/tpm \
"
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-pain-control'
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
